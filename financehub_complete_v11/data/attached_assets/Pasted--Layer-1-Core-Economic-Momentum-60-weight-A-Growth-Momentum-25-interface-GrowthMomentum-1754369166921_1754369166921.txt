 Layer 1: Core Economic Momentum (60% weight)

  A. Growth Momentum (25%)
  interface GrowthMomentum {
    gdpTrend: number;        // 3-quarter GDP trend
    employmentMomentum: number; // Employment-population ratio trend
    consumptionHealth: number;  // Retail sales + personal income
  }

  calculateGrowthMomentum(): number {
    // Use trend analysis, not absolute levels
    const gdpTrend = this.calculateTrendStrength(gdpData, 3); // 3 quarters
    const empTrend = this.calculateTrendStrength(employmentRatio, 6); // 6 
  months
    const consumptionTrend = this.calculateTrendStrength(retailSales, 3);

    // Weight by data quality and recency
    const weights = this.getDataQualityWeights(['GDP', 'Employment',
  'Consumption']);

    return (gdpTrend * weights.gdp + empTrend * weights.employment +
            consumptionTrend * weights.consumption) / weights.total;
  }

  B. Financial Stress Indicator (20%)
  calculateFinancialStress(): number {
    // Combine multiple stress indicators
    const yieldCurveStress = this.analyzeYieldCurve(); // Inversion = 
  stress
    const creditSpreads = this.getCreditSpreadStress(); // Corporate bond 
  spreads
    const equityVolatility = this.getVIXStress(); // Market fear gauge

    // Financial stress is most predictive of recessions
    return this.combineStressSignals([yieldCurveStress, creditSpreads,
  equityVolatility]);
  }

  C. Labor Market Health (15%)
  calculateLaborHealth(): number {
    // Focus on leading indicators, not lagging unemployment rate
    const jobOpeningsRatio = this.getJOLTSRatio(); // Job openings per 
  unemployed
    const layoffTrend = this.getLayoffTrend(); // Initial claims trend
    const quitRate = this.getQuitRate(); // Worker confidence indicator

    // Weight based on leading vs lagging nature
    return jobOpeningsRatio * 0.4 + layoffTrend * 0.4 + quitRate * 0.2;
  }

  Layer 2: Inflation & Policy Balance (25% weight)

  D. Inflation Trajectory (15%)
  calculateInflationTrajectory(): number {
    // Not just level, but trajectory and composition
    const coreInflationTrend = this.getTrendMomentum(coreCPI, 6);
    const breadthOfInflation = this.getInflationBreadth(); // How 
  widespread
    const inflationExpectations = this.getBreakevenRates(); // Market 
  expectations

    // Target zone scoring (2% +/- 0.5% is optimal)
    const currentCore = this.getLatestCoreCPI();
    let trajectoryScore = this.scoreInflationLevel(currentCore);

    // Adjust for trend and expectations
    trajectoryScore *=
  this.getInflationMomentumMultiplier(coreInflationTrend);

    return trajectoryScore;
  }

  E. Policy Effectiveness (10%)
  calculatePolicyEffectiveness(): number {
    // How well are policy tools working?
    const monetaryPolicyStance = this.assessFedPolicy(); // Hawkish/Dovish 
  vs needed
    const fiscalDrag = this.getFiscalImpact(); // Government spending 
  impact
    const policyCredibility = this.getPolicyCredibility(); // Market trust 
  in Fed

    return this.combinePolicy([monetaryPolicyStance, fiscalDrag,
  policyCredibility]);
  }

  Layer 3: Forward-Looking Confidence (15% weight)

  F. Economic Expectations (15%)
  calculateEconomicExpectations(): number {
    // Combine survey and market-based expectations
    const businessConfidence = this.getBusinessSurveys(); // ISM, NFIB
    const consumerSentiment = this.getConsumerExpectations(); // Michigan, 
  Conference Board
    const marketExpectations = this.getMarketBasedExpectations(); // Term 
  structure, equity multiples

    // Weight by historical predictive accuracy
    const weights = this.getExpectationWeights();

    return businessConfidence * weights.business +
           consumerSentiment * weights.consumer +
           marketExpectations * weights.market;
  }

