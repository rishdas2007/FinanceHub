Create file                                                                                                                                                                                                                                                                  │
│ ╭──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮ │
│ │ ../FinanceHub_App_v4/server/services/zscore-technical-service-optimized.ts                                                                                                                                                                                               │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │ import { db } from '../db';                                                                                                                                                                                                                                              │ │
│ │ import {                                                                                                                                                                                                                                                                 │ │
│ │   zscoreTechnicalIndicators,                                                                                                                                                                                                                                             │ │
│ │   rollingStatistics,                                                                                                                                                                                                                                                     │ │
│ │   technicalIndicators,                                                                                                                                                                                                                                                   │ │
│ │   historicalStockData,                                                                                                                                                                                                                                                   │ │
│ │   historicalSectorData,                                                                                                                                                                                                                                                  │ │
│ │   vixData                                                                                                                                                                                                                                                                │ │
│ │ } from '@shared/schema';                                                                                                                                                                                                                                                 │ │
│ │ import { desc, eq, and, gte, sql, lte } from 'drizzle-orm';                                                                                                                                                                                                              │ │
│ │ import { logger } from '../middleware/logging';                                                                                                                                                                                                                          │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │ export interface ZScoreIndicators {                                                                                                                                                                                                                                      │ │
│ │   symbol: string;                                                                                                                                                                                                                                                        │ │
│ │   date: Date;                                                                                                                                                                                                                                                            │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   // Original indicators                                                                                                                                                                                                                                                 │ │
│ │   rsi: number | null;                                                                                                                                                                                                                                                    │ │
│ │   macd: number | null;                                                                                                                                                                                                                                                   │ │
│ │   percentB: number | null;                                                                                                                                                                                                                                               │ │
│ │   atr: number | null;                                                                                                                                                                                                                                                    │ │
│ │   priceChange: number | null;                                                                                                                                                                                                                                            │ │
│ │   maTrend: number | null;                                                                                                                                                                                                                                                │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   // Z-Score normalized indicators                                                                                                                                                                                                                                       │ │
│ │   rsiZScore: number | null;                                                                                                                                                                                                                                              │ │
│ │   macdZScore: number | null;                                                                                                                                                                                                                                             │ │
│ │   bollingerZScore: number | null;                                                                                                                                                                                                                                        │ │
│ │   atrZScore: number | null;                                                                                                                                                                                                                                              │ │
│ │   priceMomentumZScore: number | null;                                                                                                                                                                                                                                    │ │
│ │   maTrendZScore: number | null;                                                                                                                                                                                                                                          │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   // Composite signal                                                                                                                                                                                                                                                    │ │
│ │   compositeZScore: number | null;                                                                                                                                                                                                                                        │ │
│ │   signal: 'BUY' | 'SELL' | 'HOLD';                                                                                                                                                                                                                                       │ │
│ │   signalStrength: number | null;                                                                                                                                                                                                                                         │ │
│ │ }                                                                                                                                                                                                                                                                        │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │ export interface ZScoreWeights {                                                                                                                                                                                                                                         │ │
│ │   rsi: number;                                                                                                                                                                                                                                                           │ │
│ │   macd: number;                                                                                                                                                                                                                                                          │ │
│ │   bollinger: number;                                                                                                                                                                                                                                                     │ │
│ │   maTrend: number;                                                                                                                                                                                                                                                       │ │
│ │   priceMomentum: number;                                                                                                                                                                                                                                                 │ │
│ │   atr: number;                                                                                                                                                                                                                                                           │ │
│ │ }                                                                                                                                                                                                                                                                        │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │ class OptimizedZScoreTechnicalService {                                                                                                                                                                                                                                  │ │
│ │   private static instance: OptimizedZScoreTechnicalService;                                                                                                                                                                                                              │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   // OPTIMIZED Z-Score Weights - Reduced redundancy, enhanced reliability                                                                                                                                                                                                │ │
│ │   private readonly weights: ZScoreWeights = {                                                                                                                                                                                                                            │ │
│ │     rsi: 0.25,           // Reduced from 35% - less noise                                                                                                                                                                                                                │ │
│ │     macd: 0.35,          // Increased from 30% - primary trend signal                                                                                                                                                                                                    │ │
│ │     bollinger: 0.15,     // Reduced from 20% - less contrarian fighting                                                                                                                                                                                                  │ │
│ │     maTrend: 0.20,       // Increased from 15% - stronger trend confirmation                                                                                                                                                                                             │ │
│ │     priceMomentum: 0.05, // Reduced from 10% - minimize noise                                                                                                                                                                                                            │ │
│ │     atr: 0.00            // Volatility modifier only, not directional                                                                                                                                                                                                    │ │
│ │   };                                                                                                                                                                                                                                                                     │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   // OPTIMIZED Thresholds - More actionable signals, volatility-adjusted                                                                                                                                                                                                 │ │
│ │   private readonly BASE_BUY_THRESHOLD = 0.75;    // Reduced from 1.0                                                                                                                                                                                                     │ │
│ │   private readonly BASE_SELL_THRESHOLD = -0.75;  // Reduced from -1.0                                                                                                                                                                                                    │ │
│ │   private readonly STRONG_BUY_THRESHOLD = 1.5;   // Reduced from 1.96                                                                                                                                                                                                    │ │
│ │   private readonly STRONG_SELL_THRESHOLD = -1.5; // Reduced from -1.96                                                                                                                                                                                                   │ │
│ │   private readonly ZSCORE_WINDOW = 63; // Keep 3-month window                                                                                                                                                                                                            │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   public static getInstance(): OptimizedZScoreTechnicalService {                                                                                                                                                                                                         │ │
│ │     if (!OptimizedZScoreTechnicalService.instance) {                                                                                                                                                                                                                     │ │
│ │       OptimizedZScoreTechnicalService.instance = new OptimizedZScoreTechnicalService();                                                                                                                                                                                  │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │     return OptimizedZScoreTechnicalService.instance;                                                                                                                                                                                                                     │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * ENHANCED: Volatility-adjusted thresholds based on VIX level                                                                                                                                                                                                         │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private async getVolatilityAdjustedThresholds(): Promise<{ buy: number, sell: number }> {                                                                                                                                                                              │ │
│ │     try {                                                                                                                                                                                                                                                                │ │
│ │       // Get current VIX level                                                                                                                                                                                                                                           │ │
│ │       const latestVix = await db.select()                                                                                                                                                                                                                                │ │
│ │         .from(vixData)                                                                                                                                                                                                                                                   │ │
│ │         .orderBy(desc(vixData.timestamp))                                                                                                                                                                                                                                │ │
│ │         .limit(1);                                                                                                                                                                                                                                                       │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       const vixLevel = latestVix[0] ? parseFloat(latestVix[0].vixValue?.toString() || '20') : 20;                                                                                                                                                                        │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Adjust thresholds based on volatility regime                                                                                                                                                                                                                    │ │
│ │       if (vixLevel < 15) {                                                                                                                                                                                                                                               │ │
│ │         // Very low volatility - more sensitive thresholds                                                                                                                                                                                                               │ │
│ │         return { buy: 0.5, sell: -0.5 };                                                                                                                                                                                                                                 │ │
│ │       } else if (vixLevel < 20) {                                                                                                                                                                                                                                        │ │
│ │         // Low volatility - slightly more sensitive                                                                                                                                                                                                                      │ │
│ │         return { buy: 0.6, sell: -0.6 };                                                                                                                                                                                                                                 │ │
│ │       } else if (vixLevel > 35) {                                                                                                                                                                                                                                        │ │
│ │         // High volatility - require stronger signals                                                                                                                                                                                                                    │ │
│ │         return { buy: 1.2, sell: -1.2 };                                                                                                                                                                                                                                 │ │
│ │       } else if (vixLevel > 25) {                                                                                                                                                                                                                                        │ │
│ │         // Elevated volatility - moderately higher thresholds                                                                                                                                                                                                            │ │
│ │         return { buy: 0.9, sell: -0.9 };                                                                                                                                                                                                                                 │ │
│ │       } else {                                                                                                                                                                                                                                                           │ │
│ │         // Normal volatility - optimized base thresholds                                                                                                                                                                                                                 │ │
│ │         return { buy: this.BASE_BUY_THRESHOLD, sell: this.BASE_SELL_THRESHOLD };                                                                                                                                                                                         │ │
│ │       }                                                                                                                                                                                                                                                                  │ │
│ │     } catch (error) {                                                                                                                                                                                                                                                    │ │
│ │       logger.warn('Could not fetch VIX data, using base thresholds', error);                                                                                                                                                                                             │ │
│ │       return { buy: this.BASE_BUY_THRESHOLD, sell: this.BASE_SELL_THRESHOLD };                                                                                                                                                                                           │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * Calculate Z-Score: (Current Value - Mean) / Standard Deviation                                                                                                                                                                                                      │ │
│ │    * Returns null for invalid calculations to maintain statistical integrity                                                                                                                                                                                             │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private calculateZScore(currentValue: number, mean: number, stdDev: number): number | null {                                                                                                                                                                           │ │
│ │     if (stdDev === 0 || isNaN(stdDev) || isNaN(currentValue) || isNaN(mean) || !isFinite(currentValue)) {                                                                                                                                                                │ │
│ │       return null; // Return null instead of 0 for invalid calculations                                                                                                                                                                                                  │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │     return (currentValue - mean) / stdDev;                                                                                                                                                                                                                               │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * OPTIMIZED: Enhanced z-score to signal conversion with statistical confidence                                                                                                                                                                                        │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private zscoreToSignal(zscore: number): number {                                                                                                                                                                                                                       │ │
│ │     if (zscore === null || !isFinite(zscore)) return 0;                                                                                                                                                                                                                  │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     // Enhanced statistical thresholds for better signal quality                                                                                                                                                                                                         │ │
│ │     if (Math.abs(zscore) > 2.0) return Math.sign(zscore) * 1.0;    // 95%+ confidence                                                                                                                                                                                    │ │
│ │     if (Math.abs(zscore) > 1.5) return Math.sign(zscore) * 0.8;    // Strong signal                                                                                                                                                                                      │ │
│ │     if (Math.abs(zscore) > 1.0) return Math.sign(zscore) * 0.6;    // Moderate signal                                                                                                                                                                                    │ │
│ │     if (Math.abs(zscore) > 0.5) return Math.sign(zscore) * 0.4;    // Weak signal                                                                                                                                                                                        │ │
│ │     return zscore * 0.2; // Very weak - linear scaling                                                                                                                                                                                                                   │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * Apply ATR as volatility signal strength modifier (unchanged)                                                                                                                                                                                                        │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private applyAtrModifier(compositeZScore: number, atrZScore: number | null): number {                                                                                                                                                                                  │ │
│ │     if (atrZScore === null || !isFinite(atrZScore)) {                                                                                                                                                                                                                    │ │
│ │       return compositeZScore;                                                                                                                                                                                                                                            │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     // High ATR (volatility) reduces signal confidence                                                                                                                                                                                                                   │ │
│ │     // Low ATR (stability) maintains or slightly enhances signal                                                                                                                                                                                                         │ │
│ │     const atrModifier = Math.max(0.7, 1.0 - Math.abs(atrZScore) * 0.1);                                                                                                                                                                                                  │ │
│ │     return compositeZScore * atrModifier;                                                                                                                                                                                                                                │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * MAIN CALCULATION METHOD - Enhanced with optimized weights and dynamic thresholds                                                                                                                                                                                    │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   async calculateZScoreForSymbol(symbol: string): Promise<ZScoreIndicators | null> {                                                                                                                                                                                     │ │
│ │     try {                                                                                                                                                                                                                                                                │ │
│ │       logger.info(`🧮 Starting OPTIMIZED Z-Score calculation for ${symbol}`);                                                                                                                                                                                            │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Get volatility-adjusted thresholds                                                                                                                                                                                                                              │ │
│ │       const thresholds = await this.getVolatilityAdjustedThresholds();                                                                                                                                                                                                   │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Get latest technical indicators                                                                                                                                                                                                                                 │ │
│ │       const latest = await db.select()                                                                                                                                                                                                                                   │ │
│ │         .from(technicalIndicators)                                                                                                                                                                                                                                       │ │
│ │         .where(eq(technicalIndicators.symbol, symbol))                                                                                                                                                                                                                   │ │
│ │         .orderBy(desc(technicalIndicators.timestamp))                                                                                                                                                                                                                    │ │
│ │         .limit(1);                                                                                                                                                                                                                                                       │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       if (!latest || latest.length === 0) {                                                                                                                                                                                                                              │ │
│ │         logger.warn(`❌ No technical indicators found for ${symbol}`);                                                                                                                                                                                                    │ │
│ │         return null;                                                                                                                                                                                                                                                     │ │
│ │       }                                                                                                                                                                                                                                                                  │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       const latestData = latest[0];                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Calculate current indicator values (same as before)                                                                                                                                                                                                             │ │
│ │       const currentRsi = parseFloat(latestData.rsi?.toString() || '0');                                                                                                                                                                                                  │ │
│ │       const currentMacd = parseFloat(latestData.macd?.toString() || '0');                                                                                                                                                                                                │ │
│ │       const currentPercentB = parseFloat(latestData.percent_b?.toString() || '0');                                                                                                                                                                                       │ │
│ │       const currentAtr = parseFloat(latestData.atr?.toString() || '0');                                                                                                                                                                                                  │ │
│ │       const currentPriceChange = parseFloat(latestData.willr?.toString() || '0'); // Placeholder                                                                                                                                                                         │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // MA Trend calculation                                                                                                                                                                                                                                            │ │
│ │       const sma20 = parseFloat(latestData.sma_20?.toString() || '0');                                                                                                                                                                                                    │ │
│ │       const sma50 = parseFloat(latestData.sma_50?.toString() || '0');                                                                                                                                                                                                    │ │
│ │       const currentMaTrend = sma50 !== 0 ? sma20 / sma50 : 1;                                                                                                                                                                                                            │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Get historical data for rolling statistics (same window logic)                                                                                                                                                                                                  │ │
│ │       const cutoffDate = new Date();                                                                                                                                                                                                                                     │ │
│ │       cutoffDate.setDate(cutoffDate.getDate() - this.ZSCORE_WINDOW);                                                                                                                                                                                                     │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       const historicalData = await db.select()                                                                                                                                                                                                                           │ │
│ │         .from(technicalIndicators)                                                                                                                                                                                                                                       │ │
│ │         .where(                                                                                                                                                                                                                                                          │ │
│ │           and(                                                                                                                                                                                                                                                           │ │
│ │             eq(technicalIndicators.symbol, symbol),                                                                                                                                                                                                                      │ │
│ │             gte(technicalIndicators.timestamp, cutoffDate)                                                                                                                                                                                                               │ │
│ │           )                                                                                                                                                                                                                                                              │ │
│ │         )                                                                                                                                                                                                                                                                │ │
│ │         .orderBy(technicalIndicators.timestamp);                                                                                                                                                                                                                         │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       if (historicalData.length < 30) {                                                                                                                                                                                                                                  │ │
│ │         logger.warn(`❌ Insufficient historical data for ${symbol}: ${historicalData.length} records`);                                                                                                                                                                   │ │
│ │         return null;                                                                                                                                                                                                                                                     │ │
│ │       }                                                                                                                                                                                                                                                                  │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Calculate rolling statistics for each indicator                                                                                                                                                                                                                 │ │
│ │       const rsiValues = historicalData.map(d => parseFloat(d.rsi?.toString() || '0')).filter(v => v > 0);                                                                                                                                                                │ │
│ │       const macdValues = historicalData.map(d => parseFloat(d.macd?.toString() || '0')).filter(v => isFinite(v));                                                                                                                                                        │ │
│ │       const percentBValues = historicalData.map(d => parseFloat(d.percent_b?.toString() || '0')).filter(v => isFinite(v));                                                                                                                                               │ │
│ │       const atrValues = historicalData.map(d => parseFloat(d.atr?.toString() || '0')).filter(v => v > 0);                                                                                                                                                                │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // MA Trend historical values                                                                                                                                                                                                                                      │ │
│ │       const maTrendValues = historicalData.map(d => {                                                                                                                                                                                                                    │ │
│ │         const sma20 = parseFloat(d.sma_20?.toString() || '0');                                                                                                                                                                                                           │ │
│ │         const sma50 = parseFloat(d.sma_50?.toString() || '0');                                                                                                                                                                                                           │ │
│ │         return sma50 !== 0 ? sma20 / sma50 : 1;                                                                                                                                                                                                                          │ │
│ │       }).filter(v => isFinite(v) && v > 0);                                                                                                                                                                                                                              │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Price change calculation (simplified)                                                                                                                                                                                                                           │ │
│ │       const priceValues = historicalData.map(d => parseFloat(d.willr?.toString() || '0')).filter(v => isFinite(v));                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Calculate statistics                                                                                                                                                                                                                                            │ │
│ │       const rsiStats = this.calculateStats(rsiValues);                                                                                                                                                                                                                   │ │
│ │       const macdStats = this.calculateStats(macdValues);                                                                                                                                                                                                                 │ │
│ │       const bollingerStats = this.calculateStats(percentBValues);                                                                                                                                                                                                        │ │
│ │       const atrStats = this.calculateStats(atrValues);                                                                                                                                                                                                                   │ │
│ │       const maTrendStats = this.calculateStats(maTrendValues);                                                                                                                                                                                                           │ │
│ │       const priceStats = this.calculateStats(priceValues);                                                                                                                                                                                                               │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Calculate Z-scores                                                                                                                                                                                                                                              │ │
│ │       const rsiZScore = this.calculateZScore(currentRsi, rsiStats.mean, rsiStats.stdDev);                                                                                                                                                                                │ │
│ │       const macdZScore = this.calculateZScore(currentMacd, macdStats.mean, macdStats.stdDev);                                                                                                                                                                            │ │
│ │       const bollingerZScore = this.calculateZScore(currentPercentB, bollingerStats.mean, bollingerStats.stdDev);                                                                                                                                                         │ │
│ │       const atrZScore = this.calculateZScore(currentAtr, atrStats.mean, atrStats.stdDev);                                                                                                                                                                                │ │
│ │       const maTrendZScore = this.calculateZScore(currentMaTrend, maTrendStats.mean, maTrendStats.stdDev);                                                                                                                                                                │ │
│ │       const priceMomentumZScore = this.calculateZScore(currentPriceChange, priceStats.mean, priceStats.stdDev);                                                                                                                                                          │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // OPTIMIZED composite Z-score calculation with new weights                                                                                                                                                                                                        │ │
│ │       const rawCompositeZScore = (                                                                                                                                                                                                                                       │ │
│ │         (rsiZScore !== null ? this.weights.rsi * this.zscoreToSignal(rsiZScore) : 0) +                                                                                                                                                                                   │ │
│ │         (macdZScore !== null ? this.weights.macd * this.zscoreToSignal(macdZScore) : 0) +                                                                                                                                                                                │ │
│ │         // Keep Bollinger inversion but with reduced weight                                                                                                                                                                                                              │ │
│ │         (bollingerZScore !== null ? this.weights.bollinger * this.zscoreToSignal(-bollingerZScore) : 0) +                                                                                                                                                                │ │
│ │         (maTrendZScore !== null ? this.weights.maTrend * this.zscoreToSignal(maTrendZScore) : 0) +                                                                                                                                                                       │ │
│ │         (priceMomentumZScore !== null ? this.weights.priceMomentum * this.zscoreToSignal(priceMomentumZScore) : 0)                                                                                                                                                       │ │
│ │       );                                                                                                                                                                                                                                                                 │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Apply ATR volatility modifier                                                                                                                                                                                                                                   │ │
│ │       const compositeZScore = this.applyAtrModifier(rawCompositeZScore, atrZScore);                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // OPTIMIZED signal generation with dynamic thresholds                                                                                                                                                                                                             │ │
│ │       let signal: 'BUY' | 'SELL' | 'HOLD' = 'HOLD';                                                                                                                                                                                                                      │ │
│ │       if (compositeZScore >= thresholds.buy) signal = 'BUY';                                                                                                                                                                                                             │ │
│ │       else if (compositeZScore <= thresholds.sell) signal = 'SELL';                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       const result: ZScoreIndicators = {                                                                                                                                                                                                                                 │ │
│ │         symbol,                                                                                                                                                                                                                                                          │ │
│ │         date: latestData.timestamp,                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Original indicators                                                                                                                                                                                                                                           │ │
│ │         rsi: currentRsi,                                                                                                                                                                                                                                                 │ │
│ │         macd: currentMacd,                                                                                                                                                                                                                                               │ │
│ │         percentB: currentPercentB,                                                                                                                                                                                                                                       │ │
│ │         atr: currentAtr,                                                                                                                                                                                                                                                 │ │
│ │         priceChange: currentPriceChange,                                                                                                                                                                                                                                 │ │
│ │         maTrend: currentMaTrend,                                                                                                                                                                                                                                         │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Z-Score normalized indicators                                                                                                                                                                                                                                 │ │
│ │         rsiZScore,                                                                                                                                                                                                                                                       │ │
│ │         macdZScore,                                                                                                                                                                                                                                                      │ │
│ │         bollingerZScore,                                                                                                                                                                                                                                                 │ │
│ │         atrZScore,                                                                                                                                                                                                                                                       │ │
│ │         priceMomentumZScore,                                                                                                                                                                                                                                             │ │
│ │         maTrendZScore,                                                                                                                                                                                                                                                   │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Composite signal                                                                                                                                                                                                                                              │ │
│ │         compositeZScore,                                                                                                                                                                                                                                                 │ │
│ │         signal,                                                                                                                                                                                                                                                          │ │
│ │         signalStrength: Math.abs(compositeZScore)                                                                                                                                                                                                                        │ │
│ │       };                                                                                                                                                                                                                                                                 │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       // Store in database                                                                                                                                                                                                                                               │ │
│ │       await this.storeZScoreData(result);                                                                                                                                                                                                                                │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │       logger.info(`✅ OPTIMIZED Z-Score calculation completed for ${symbol}: ${signal} (${compositeZScore.toFixed(4)}) with dynamic threshold ±${thresholds.buy}`);                                                                                                       │ │
│ │       return result;                                                                                                                                                                                                                                                     │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     } catch (error) {                                                                                                                                                                                                                                                    │ │
│ │       logger.error(`❌ Error in optimized Z-Score calculation for ${symbol}:`, error);                                                                                                                                                                                    │ │
│ │       return null;                                                                                                                                                                                                                                                       │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * Calculate statistical measures (same as before)                                                                                                                                                                                                                     │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private calculateStats(values: number[]): { mean: number; stdDev: number; count: number } {                                                                                                                                                                            │ │
│ │     if (values.length === 0) {                                                                                                                                                                                                                                           │ │
│ │       return { mean: 0, stdDev: 1, count: 0 };                                                                                                                                                                                                                           │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     const mean = values.reduce((sum, val) => sum + val, 0) / values.length;                                                                                                                                                                                              │ │
│ │     const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / (values.length - 1);                                                                                                                                                                │ │
│ │     const stdDev = Math.sqrt(variance);                                                                                                                                                                                                                                  │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     return {                                                                                                                                                                                                                                                             │ │
│ │       mean,                                                                                                                                                                                                                                                              │ │
│ │       stdDev: stdDev || 1, // Prevent division by zero                                                                                                                                                                                                                   │ │
│ │       count: values.length                                                                                                                                                                                                                                               │ │
│ │     };                                                                                                                                                                                                                                                                   │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * Store Z-score data in database (same as before)                                                                                                                                                                                                                     │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   private async storeZScoreData(data: ZScoreIndicators): Promise<void> {                                                                                                                                                                                                 │ │
│ │     try {                                                                                                                                                                                                                                                                │ │
│ │       await db.insert(zscoreTechnicalIndicators).values({                                                                                                                                                                                                                │ │
│ │         symbol: data.symbol,                                                                                                                                                                                                                                             │ │
│ │         date: data.date,                                                                                                                                                                                                                                                 │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Original indicators                                                                                                                                                                                                                                           │ │
│ │         rsi: data.rsi?.toString(),                                                                                                                                                                                                                                       │ │
│ │         macd: data.macd?.toString(),                                                                                                                                                                                                                                     │ │
│ │         percentB: data.percentB?.toString(),                                                                                                                                                                                                                             │ │
│ │         atr: data.atr?.toString(),                                                                                                                                                                                                                                       │ │
│ │         priceChange: data.priceChange?.toString(),                                                                                                                                                                                                                       │ │
│ │         maTrend: data.maTrend?.toString(),                                                                                                                                                                                                                               │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Z-Score normalized indicators                                                                                                                                                                                                                                 │ │
│ │         rsiZScore: data.rsiZScore?.toString(),                                                                                                                                                                                                                           │ │
│ │         macdZScore: data.macdZScore?.toString(),                                                                                                                                                                                                                         │ │
│ │         bollingerZScore: data.bollingerZScore?.toString(),                                                                                                                                                                                                               │ │
│ │         atrZScore: data.atrZScore?.toString(),                                                                                                                                                                                                                           │ │
│ │         priceMomentumZScore: data.priceMomentumZScore?.toString(),                                                                                                                                                                                                       │ │
│ │         maTrendZScore: data.maTrendZScore?.toString(),                                                                                                                                                                                                                   │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Composite signal                                                                                                                                                                                                                                              │ │
│ │         compositeZScore: data.compositeZScore?.toString(),                                                                                                                                                                                                               │ │
│ │         signal: data.signal,                                                                                                                                                                                                                                             │ │
│ │         signalStrength: data.signalStrength?.toString(),                                                                                                                                                                                                                 │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         // Metadata                                                                                                                                                                                                                                                      │ │
│ │         lookbackPeriod: this.ZSCORE_WINDOW,                                                                                                                                                                                                                              │ │
│ │         dataQuality: 'optimized',                                                                                                                                                                                                                                        │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │         createdAt: new Date(),                                                                                                                                                                                                                                           │ │
│ │         updatedAt: new Date()                                                                                                                                                                                                                                            │ │
│ │       }).onConflictDoUpdate({                                                                                                                                                                                                                                            │ │
│ │         target: [zscoreTechnicalIndicators.symbol, zscoreTechnicalIndicators.date],                                                                                                                                                                                      │ │
│ │         set: {                                                                                                                                                                                                                                                           │ │
│ │           compositeZScore: data.compositeZScore?.toString(),                                                                                                                                                                                                             │ │
│ │           signal: data.signal,                                                                                                                                                                                                                                           │ │
│ │           signalStrength: data.signalStrength?.toString(),                                                                                                                                                                                                               │ │
│ │           updatedAt: new Date()                                                                                                                                                                                                                                          │ │
│ │         }                                                                                                                                                                                                                                                                │ │
│ │       });                                                                                                                                                                                                                                                                │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     } catch (error) {                                                                                                                                                                                                                                                    │ │
│ │       logger.error('❌ Error storing optimized Z-score data:', error);                                                                                                                                                                                                    │ │
│ │     }                                                                                                                                                                                                                                                                    │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │   /**                                                                                                                                                                                                                                                                    │ │
│ │    * Process multiple symbols with optimized formula                                                                                                                                                                                                                     │ │
│ │    */                                                                                                                                                                                                                                                                    │ │
│ │   async processMultipleSymbols(symbols: string[]): Promise<void> {                                                                                                                                                                                                       │ │
│ │     logger.info(`🚀 Starting OPTIMIZED Z-Score processing for ${symbols.length} symbols`);                                                                                                                                                                               │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     const results = await Promise.allSettled(                                                                                                                                                                                                                            │ │
│ │       symbols.map(symbol => this.calculateZScoreForSymbol(symbol))                                                                                                                                                                                                       │ │
│ │     );                                                                                                                                                                                                                                                                   │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     const successful = results.filter(r => r.status === 'fulfilled' && r.value !== null).length;                                                                                                                                                                         │ │
│ │     const failed = results.length - successful;                                                                                                                                                                                                                          │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │     logger.info(`✅ OPTIMIZED Processing complete: ${successful} successful, ${failed} failed`);                                                                                                                                                                          │ │
│ │   }                                                                                                                                                                                                                                                                      │ │
│ │ }                                                                                                                                                                                                                                                                        │ │
│ │                                                                                                                                                                                                                                                                          │ │
│ │ export { OptimizedZScoreTechnicalService };