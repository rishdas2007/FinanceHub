I can see the issue! The table is showing "N/A" for almost all values
  except XLV which has some data, and most price changes are showing
  0.00%. This indicates:

  1. API is returning data (table loads with 12 ETFs)
  2. Most values are null/undefined (showing N/A due to our null safety)
  3. Only XLV has complete data (Z-Score: 0.1702, RSI: 47.8, etc.)

  This suggests a database issue - most ETF data is missing or
  incomplete.

  ETF Data Missing Issue - Root Cause Analysis

  What the Screenshot Shows

  ✅ Working

  - Table renders with all 12 ETF symbols
  - XLV has complete data: Z-Score (0.1702), RSI (47.8), MACD (0.018), %B
   (24.9%), MA Gap (9.78%)
  - Price changes show some data (mostly positive small percentages)

  ❌ Missing Data

  - 11 out of 12 ETFs show "N/A" for technical indicators
  - Only price change data exists for most symbols
  - Z-Scores, RSI, MACD, Bollinger %B, MA Gap all missing

  Root Cause: Database Data Missing

  The API is working, but the database tables are missing most ETF
  technical indicator data.

  Immediate Investigation Plan

  Step 1: Check Database Tables (5 minutes)

  Run these SQL queries to diagnose:

  -- Check if technical indicators exist for ETFs
  SELECT symbol, COUNT(*) as records, MAX(timestamp) as latest_date
  FROM technical_indicators
  WHERE symbol IN ('SPY', 'XLK', 'XLF', 'XLI', 'XLE', 'XLV', 'XLP',
  'XLU', 'XLY', 'XLC', 'XLB', 'XLRE')
  GROUP BY symbol
  ORDER BY records DESC;

  -- Check equity_features_daily table
  SELECT symbol, COUNT(*) as records, MAX(asof_date) as latest_date
  FROM equity_features_daily
  WHERE symbol IN ('SPY', 'XLK', 'XLF', 'XLI', 'XLE', 'XLV', 'XLP',
  'XLU', 'XLY', 'XLC', 'XLB', 'XLRE')
  GROUP BY symbol
  ORDER BY records DESC;

  -- Check which table the API is actually using
  SELECT table_name FROM information_schema.tables
  WHERE table_name LIKE '%etf%' OR table_name LIKE '%equity%';

  Step 2: Check API Endpoint (5 minutes)

  Add logging to see what the API is actually returning:

  // Add to ETFMetricsTableOptimized.tsx queryFn:
  queryFn: () => fetch('/api/etf-metrics').then(res =>
  res.json()).then(data => {
    console.log('🔍 ETF API Full Response:', JSON.stringify(data, null,
  2));
    console.log('🔍 First metric details:', data?.metrics?.[0]);
    console.log('🔍 XLV metric (working one):', data?.metrics?.find(m =>
  m.symbol === 'XLV'));
    return data;
  }),

  Step 3: Compare Working vs Non-Working (5 minutes)

  - XLV has data, others don't
  - Check if XLV uses different data source
  - Verify if other ETFs exist in the database

  Quick Fixes to Try

  Option A: Use Enhanced API Endpoint

  Switch to the enhanced endpoint that might have more complete data:

  // Change in ETFMetricsTableOptimized.tsx:34
  queryFn: () => fetch('/api/etf-enhanced/metrics').then(res =>
  res.json())

  Option B: Check Database Backup Restoration

  From your replit.md, you restored database backup v17. Verify if all
  tables were restored properly:

  -- Check if all expected tables exist with data
  SELECT
    schemaname,
    tablename,
    n_tup_ins as inserts,
    n_tup_upd as updates,
    n_tup_del as deletes
  FROM pg_stat_user_tables
  WHERE tablename LIKE '%technical%' OR tablename LIKE '%equity%' OR
  tablename LIKE '%stock%';

  Option C: Data Pipeline Issue

  Check if your ETF data collection services are running:
  - Historical data intelligence system
  - Technical indicators calculation services
  - ETF metrics preprocessing

  Expected Results

  After running the investigation:
  1. If database tables are empty: Need to restore/rebuild ETF technical
  indicator data
  2. If API returns incomplete data: API endpoint or data transformation
  issue
  3. If only XLV has data: Data collection only worked for one symbol