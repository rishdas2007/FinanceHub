# Python Code for Sector ETF Analysis

Below is a Python code template for analyzing each sector ETF (and SPY) to compute risk-adjusted returns, Sharpe ratios, volatility, momentum strategies, technical indicators with z-scores, and correlation analysis.

## Prerequisites

Install necessary libraries if they're not already installed:

```python
!pip install pandas numpy
```

## 1. Import Libraries and Load Data

```python
import pandas as pd
import numpy as np

# Load your Excel or CSV price data (Date as index, tickers as columns)
# Example: df = pd.read_excel('your_sector_etf_data.xlsx', index_col='Date', parse_dates=True)
```

## 2. Metric Calculation Function

```python
def calculate_metrics(df):
    # Calculate daily returns
    returns = df.pct_change().dropna()

    # Annualized volatility and return
    volatility = returns.std() * np.sqrt(252)
    mean_return = returns.mean() * 252

    # Sharpe Ratio (assumes risk-free rate = 0)
    sharpe_ratio = mean_return / volatility

    # Momentum: 20-day and 50-day moving averages
    ma_20 = df.rolling(window=20).mean()
    ma_50 = df.rolling(window=50).mean()
    # Basic momentum signal (1 if MA20 > MA50 else 0)
    momentum_signal = (ma_20 > ma_50).astype(int)

    # Z-scores: price vs. rolling 20-day mean/std
    rolling_mean_20 = df.rolling(window=20).mean()
    rolling_std_20 = df.rolling(window=20).std()
    z_scores = (df - rolling_mean_20) / rolling_std_20

    # Correlation matrix (returns)
    correlation_matrix = returns.corr()

    metrics = {
        'volatility': volatility,
        'mean_return': mean_return,
        'sharpe_ratio': sharpe_ratio,
        'momentum_signal': momentum_signal,
        'z_scores': z_scores,
        'correlation_matrix': correlation_matrix
    }
    return metrics
```

## 3. Example Usage

```python
# Assuming df_prices is your DataFrame of closing prices, indexed by date:
metrics = calculate_metrics(df_prices)

# Access individual outputs:
print('Annualized Volatility:\n', metrics['volatility'])
print('Sharpe Ratios:\n', metrics['sharpe_ratio'])
print('Momentum Signals (last row):\n', metrics['momentum_signal'].iloc[-1])
print('Technical Indicator Z-scores (last row):\n', metrics['z_scores'].iloc[-1])
print('Correlation Matrix:\n', metrics['correlation_matrix'])
```

## What Each Output Means

- **Annualized Volatility:** Standard deviation of daily returns rescaled to a year—risk metric.
- **Sharpe Ratio:** Measures return per unit of risk (higher is better).
- **Momentum Signals:** Shows which tickers are currently in a momentum phase (short vs. long-term trend).
- **Z-scores:** Identifies how “unusual” the current price is compared to the recent 20-day history.
- **Correlation Matrix:** Shows how much each ETF’s daily moves are related to the others (helps with diversification decisions).

You can use/modify this code directly for your sector rotation and investment opportunity analysis.